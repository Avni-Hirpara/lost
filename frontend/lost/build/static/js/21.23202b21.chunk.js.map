{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/toInteger.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/exenv/index.js","../node_modules/lodash/find.js","../node_modules/lodash/findIndex.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/reactstrap/es/Progress.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/reactstrap/es/Table.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/moment/moment.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","baseForOwn","baseEach","createBaseEach","toFinite","toInteger","value","result","remainder","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","interpolate","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","tooltipPosition","x","y","hasValue","isNumber","inherits","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","toNumber","INFINITY","MAX_INTEGER","isObject","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","baseIsEqual","isEqual","baseFindIndex","array","predicate","fromIndex","fromRight","index","__WEBPACK_AMD_DEFINE_RESULT__","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","call","find","createFind","baseIteratee","nativeMax","Math","max","findIndex","filterByPosition","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","getMinimumBoxSize","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","finalFitVerticalBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","id","Array","toString","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5__","lodash_tonumber__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","propTypes","children","node","bar","bool","multi","tag","oneOfType","string","number","animated","striped","className","barClassName","cssModule","object","Progress","Tag","attributes","percent","progressClasses","progressBarClasses","ProgressBar","role","aria-valuenow","aria-valuemin","aria-valuemax","defaultProps","__webpack_exports__","isArrayLike","findIndexFunc","collection","iterable","iteratee","eachFunc","Chart","Animation","animationService","elements","Interaction","platform","plugins","Scale","scaleService","Tooltip","register","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","defineProperty","get","set","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","xAxis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","getTooltipSize","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getBackgroundPoint","vm","paddingAndSize","radiusAndPadding","determineAlignment","lf","rf","olf","orf","yf","midX","midY","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","_utils__WEBPACK_IMPORTED_MODULE_5__","bordered","borderless","inverse","hover","responsive","responsiveTag","innerRef","func","Table","ResponsiveTag","classes","table","ref","responsiveClassName","process","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","pid","otherProps","rest","_props2","_props3","onClick","Component","isRequired","arrayOf","propName","componentName","controllers","Error","_React$Component2","Doughnut","_this4","_ref","_React$Component3","Pie","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","Radar","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","responsiveAnimationDuration","maintainAspectRatio","events","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","yRange","isVertical","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","createResizer","cls","cssText","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","throttled","ticking","watchForRender","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","insertBefore","firstChild","removeResizeListener","unwatchForRender","remove","removeChild","keyframes","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","getElementById","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","updateConfig","newOptions","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","listenArrayEvents","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generateTicks","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","fitWithPointLabels","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","_fit","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","skey","tkey","lookup","mid","i0","i1","lo","prev","span","momentify","parser","format","parse","input","time","startOf","determineMajorUnit","unit","generate","capacity","timeOpts","determineUnitForAutoTicks","minUnit","interval","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","determineStepSize","milliseconds","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","diff","as","_majorUnit","buildLookupTable","distribution","curr","_offsets","computeOffsets","upper","lower","_labelFormat","determineLabelFormat","momentDate","hasTime","ticksFromTimestamps","majorUnit","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","makeFormatFunction","mom","output","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","date","daysInMonth","modMonth","mod","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","kFormat","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","webpackMissingModule","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","chooseLocale","names","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","dayOfYearFromWeekInfo","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","_nextDay","createDate","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","preprocessRFC2822","parsedArray","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","isPm","meridiemHour","prepareConfig","preparse","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromInput","configFromString","createFromInputFallback","configFromObject","isUTC","isObjectEmpty","getOwnPropertyNames","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","days","isDurationValid","unitHasDecimal","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","chunk","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","parseIso","momentsDifference","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","createInvalid$1","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","calendar$1","sod","calendarFormat","asFloat","that","zoneDelta","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","stringGet","invalidAt","localInput","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","isValid$2","parsingFlags","stringSet","prioritized","getPrioritizedUnits","unitsObj","u","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","getIsLeapYear","getSetWeekYear","getSetISOWeekYear","isoWeek","getSetQuarter","getDaysInMonth","getSetWeek","isoWeeks","getSetISOWeek","getWeeksInYear","weekInfo","isoWeeksInYear","getISOWeeksInYear","getSetDayOfWeek","parseWeekday","getSetLocaleDayOfWeek","getSetISODayOfWeek","parseIsoWeekday","getSetDayOfYear","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","setOffsetToUTC","setOffsetToLocal","parseZone","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDST","isDaylightSavingTime","isUtcOffset","zoneAbbr","getZoneAbbr","zoneName","getZoneName","dates","getSetZone","isDSTShifted","isDaylightSavingTimeShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","localeMonths","isFormat","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParseExact","handleStrictParse","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeWeek","firstDayOfYear","localeFirstDayOfYear","firstDayOfWeek","localeFirstDayOfWeek","localeWeekdays","_weekdays","localeWeekdaysMin","_weekdaysMin","localeWeekdaysShort","_weekdaysShort","localeWeekdaysParse","weekdayName","_weekdaysParseExact","handleStrictParse$1","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","localeIsPM","localeMeridiem","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","isValid$1","add$1","subtract$1","valueOf$1","bubble","monthsFromDays","clone$1","get$2","withSuffix","relativeTime$1","posNegDuration","substituteTimeAgo","toIsoString","version","setHookCallback","createUnix","listMonths","listWeekdays","createInZone","listMonthsShort","listWeekdaysMin","updateLocale","tmpLocale","listLocales","listWeekdaysShort","relativeTimeRounding","getSetRelativeTimeRounding","roundingFunction","relativeTimeThreshold","getSetRelativeTimeThreshold","threshold","limit","getCalendarFormat","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","computeFlexCategoryTraits","computeFitCategoryTraits","thickness","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","doFill","p0","d0","d1","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","initializer","accumulator","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_setCanvasId","_idMaker","random","_canvasId","titleLines","tooltipHeader","tooltipHeaderTitle","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft"],"mappings":"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","file":"static/js/21.23202b21.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n  var ExecutionEnvironment = {\n    canUseDOM: canUseDOM,\n    canUseWorkers: typeof Worker !== 'undefined',\n    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n    canUseViewport: canUseDOM && !!window.screen\n  };\n\n  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    define(function () {\n      return ExecutionEnvironment;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = ExecutionEnvironment;\n  } else {\n    window.ExecutionEnvironment = ExecutionEnvironment;\n  }\n})();","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport toNumber from 'lodash.tonumber';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  max: 100\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var ProgressBar = multi ? children : React.createElement(\"div\", {\n    className: progressBarClasses,\n    style: {\n      width: percent + \"%\"\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": max,\n    children: children\n  });\n\n  if (bar) {\n    return ProgressBar;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: progressClasses,\n    children: ProgressBar\n  }));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  inverse: deprecated(PropTypes.bool, 'Please use the prop \"dark\"'),\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      inverse = props.inverse,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"inverse\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark || inverse ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive;\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n      date.setFullYear(y);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(y);\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    if (!m) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];\n    }\n\n    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from begining of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to begining of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {\n      milliseconds: 0,\n      months: 0\n    };\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units || 'millisecond');\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  function startOf(units) {\n    units = normalizeUnits(units); // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n\n    switch (units) {\n      case 'year':\n        this.month(0);\n\n      /* falls through */\n\n      case 'quarter':\n      case 'month':\n        this.date(1);\n\n      /* falls through */\n\n      case 'week':\n      case 'isoWeek':\n      case 'day':\n      case 'date':\n        this.hours(0);\n\n      /* falls through */\n\n      case 'hour':\n        this.minutes(0);\n\n      /* falls through */\n\n      case 'minute':\n        this.seconds(0);\n\n      /* falls through */\n\n      case 'second':\n        this.milliseconds(0);\n    } // weeks are a special case\n\n\n    if (units === 'week') {\n      this.weekday(0);\n    }\n\n    if (units === 'isoWeek') {\n      this.isoWeekday(1);\n    } // quarters are also special\n\n\n    if (units === 'quarter') {\n      this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n  }\n\n  function endOf(units) {\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond') {\n      return this;\n    } // 'date' is an alias for 'day', so it should be considered as such.\n\n\n    if (units === 'date') {\n      units = 'day';\n    }\n\n    return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.22.2';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'YYYY-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}