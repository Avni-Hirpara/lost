{"version":3,"sources":["components/AnnoTask/AmountPerLabel.js","components/AnnoTask/MyAnnoTasks.js","components/AnnoTask/WorkingOn.js","views/AnnotatorDashboard.js","components/AnnoTask/utils.js"],"names":["options","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","AmountPerLabel","labels","this","props","data","map","d","label","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","amount","barData","getBarData","length","react_default","a","createElement","className","react_chartjs_2_es","height","Fragment","Component","getAnnoTaskStatistic","actions","customStyles","content","top","left","right","bottom","marginRight","transform","width","maxWidth","overlay","MyAnnoTasks","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","modalIsOpen","openModal","bind","assertThisInitialized","afterOpenModal","closeModal","setState","annoTask","id","type","status","callBack","lib_default","isOpen","onAfterOpen","onRequestClose","style","ariaHideApp","contentLabel","Card","CardHeader","CardBody","renderStatistic","Button","color","onClick","specificAnnoTaskStatistic","Row","Col","xs","md","xl","name","pipelineName","finished","size","statistic","secondsPerAnno","AnnoTask_AmountPerLabel","amountPerLabel","_this2","annoTasks","progress","Math","floor","lastActivity","twoWeeksAgo","Date","setDate","getDate","lastActivityDate","key","cursor","handleRowClick","pipelineCreator","group","createdAt","Progress","getColor","value","lastAnnotator","handleStatisticsClick","disabled","renderStatisticModal","Table","hover","responsive","renderTableBody","connect","mapStateToProps","annoTaskStatistic","history","createHashHistory","WorkingOn","push","concat","toLowerCase","handleContinue","getAnnoTasks","getWorkingOnAnnoTask","chooseAnnoTask","AnnotatorDashboard","redirectMia","redirectSia","timer","setInterval","clearInterval","workingOnAnnoTask","AnnoTask_WorkingOn","_this3","renderWorkingOn","AnnoTask_MyAnnoTasks","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"static/js/16.1e07b320.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport {CustomTooltips} from '@coreui/coreui-plugin-chartjs-custom-tooltips';\n\nconst options = {\n    tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n    },\n    maintainAspectRatio: false\n}\n\nclass AmountPerLabel extends Component {\n    getBarData() {\n        const labels = this\n            .props\n            .data\n            .map((d) => {\n                return (d.label)\n            })\n        const data = this\n            .props\n            .data\n            .map((d) => {\n                return (d.amount)\n            })\n        const bar = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Amount per label',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                    hoverBorderColor: 'rgba(255,99,132,1)',\n                    data: data\n                }\n            ]\n        }\n        return bar\n    }\n    render() {\n        const barData = this.getBarData()\n        if (barData.labels.length > 0) {\n            return (\n\n                <div className=\"chart-wrapper\">\n                    <Bar data={barData} options={options} height={100}/>\n                </div>\n\n            )\n        } else {\n            return (\n                <React.Fragment>No Data available yet.</React.Fragment>\n            )\n        }\n\n    }\n}\n\nexport default AmountPerLabel\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {Button, Progress, Table, Card, CardHeader, CardBody, Row, Col} from 'reactstrap'\nimport {getColor} from './utils'\nimport AmountPerLabel from './AmountPerLabel'\n\nimport Modal from 'react-modal'\n\nimport actions from '../../actions'\n\n\nconst {getAnnoTaskStatistic} = actions\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n      width: '85%',\n      height: '85%',\n      maxWidth: '75rem'\n    },\n    overlay: {\n        backgroundColor: 'rgba(0,0,0,0.75)'\n      },\n  };\n\nclass MyAnnoTasks extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            modalIsOpen: false,\n        }\n\n        this.openModal = this.openModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        //this.subtitle.style.color = '#f00';\n    }\n\n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n\n    handleRowClick(annoTask){\n        const {id,type,status} = annoTask\n        if(status==='inProgress'){\n            this.props.callBack(id, type)\n        }\n    }\n    handleStatisticsClick(annoTask){\n        this.props.getAnnoTaskStatistic(annoTask.id)\n  \n        this.openModal()\n    }\n    renderStatisticModal(){\n        return(\n        <Modal\n            isOpen={this.state.modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            style={customStyles}\n            ariaHideApp={false}\n            contentLabel=\"Logfile\"\n            >\n            <Card style={{height:'90%'}}>\n                <CardHeader><i className=\"icon-chart\"></i> Statistics</CardHeader>\n                <CardBody style={{height:'100%'}}>\n                    {this.renderStatistic()}\n                </CardBody>\n                <Button color='success' onClick={this.closeModal}><i className=\"fa fa-times\"></i> Close</Button>\n            </Card>                   \n        </Modal>)    \n    }\n\n    renderStatistic(){\n        if(this.props.specificAnnoTaskStatistic){\n        return(\n            <div>\n                <Row>\n                <Col xs='3' md='3' xl='3'>\n                <div className='callout callout-danger'>\n                                <small className='text-muted'>Working on</small>\n                                <br/>\n                                <strong>{this.props.specificAnnoTaskStatistic.name}</strong>\n                </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                <div className='callout callout-info'>\n                                <small className='text-muted'>Pipeline</small>\n                                <br/>\n                                <strong>{this.props.specificAnnoTaskStatistic.pipelineName}</strong>\n                </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                <div className='callout callout-warning'>\n                                <small className='text-muted'>Annotations</small>\n                                <br/>\n                                <strong className='h4'>{this.props.specificAnnoTaskStatistic.finished}/{this.props.specificAnnoTaskStatistic.size}</strong>\n                </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                <div className='callout callout-success'>\n                                <small className='text-muted'>Seconds/Annotation</small>\n                                <br/>\n                                <strong className='h4'>&#8709; {this.props.specificAnnoTaskStatistic.statistic.secondsPerAnno}</strong>\n                </div>\n                </Col>\n                </Row>\n                <AmountPerLabel data={this.props.specificAnnoTaskStatistic.statistic.amountPerLabel}></AmountPerLabel>\n            </div>)\n            }else return(<div>No Data available.</div>)\n    }\n\n    renderTableBody() {\n        return (\n            <tbody>\n                {this.props.annoTasks.map((annoTask) => {\n                    let progress = Math.floor((annoTask.finished/annoTask.size)*100)\n                    if (annoTask.lastActivity){\n                        const twoWeeksAgo = new Date()\n                        twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 14)\n                        const lastActivityDate = new Date(annoTask.lastActivity)\n                        if(annoTask.status === 'finished' && lastActivityDate < twoWeeksAgo){\n                            return undefined\n                        }\n                    }\n                    return (\n                        <tr key={annoTask.id} style={annoTask.status === 'inProgress' ? {'cursor': 'pointer'}:{'backgroundColor': '#CCCCCC'}} >\n                            <td className='text-center' onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <div>{annoTask.name}</div>\n                                <div className='small text-muted'>ID: {annoTask.id}\n                                </div>\n                            </td>\n                            <td onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <div>{annoTask.pipelineName}</div>\n                                <div className='small text-muted'>\n                                    Created by: {annoTask.pipelineCreator}\n                                </div>\n                            </td>\n                            <td className='text-center' onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <div>{annoTask.group}</div>\n                            </td>\n                            <td onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <div className='clearfix'>\n                                    <div className='float-left'>\n                                        <strong>{progress}%</strong>\n                                    </div>\n                                    <div className='float-right'>\n                                        <small className='text-muted'>Started at: {annoTask.createdAt}</small>\n                                    </div>\n                                </div>\n                                <Progress className='progress-xs' color={getColor(progress)} value={progress}/>\n                                <div className='small text-muted'>\n                                    {annoTask.finished}/{annoTask.size}\n                                </div>\n                            </td>\n                            <td className='text-center' onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <strong>{annoTask.type}</strong>\n                            </td>\n                            <td onClick={() => this.handleRowClick(annoTask)} style={{cursor:'pointer'}}>\n                                <strong>{annoTask.lastActivity}</strong>\n                                <div className='small text-muted'>by {annoTask.lastAnnotator}</div>\n                            </td>\n                            <td>\n                                <Button onClick={()=>this.handleStatisticsClick(annoTask)} color={progress>0 ?'info':''}disabled={progress>0 ?false:true}><span className='icon-chart'>&nbsp;</span>Statistic</Button>\n                            </td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n\n        )\n    }\n    render() {\n\n        return (\n            <React.Fragment>\n                {this.renderStatisticModal()}\n                <Table hover responsive className='table-outline mb-0 d-none d-sm-table'>\n                    <thead className='thead-light'>\n                        <tr>\n                            <th className='text-center'>Name</th>\n                            <th className='text-center'>Pipeline</th>\n                            <th className='text-center'>Group/User</th>\n                            <th>Progress</th>\n                            <th className='text-center'>Annotation Type</th>\n                            <th className='text-center'>Activity</th>\n                            <th className='text-center'>Statistics</th>\n                        </tr>\n                    </thead>\n                    {this.renderTableBody()}\n                </Table>\n            </React.Fragment>\n        )\n\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return ({specificAnnoTaskStatistic: state.annoTask.annoTaskStatistic})\n}\n\nexport default connect(mapStateToProps, {getAnnoTaskStatistic})(MyAnnoTasks)","import React, {Component} from 'react'\nimport {Progress} from 'reactstrap'\nimport {getColor} from './utils'\nimport {Button, Col ,Row} from 'reactstrap'\n\nimport { createHashHistory } from 'history'\nconst history = createHashHistory()\n\nclass WorkingOn extends Component {\n    handleContinue(type){\n        history.push(`/${type.toLowerCase()}`)\n    }\n    render() {\n        let progress = Math.floor((this.props.annoTask.finished / this.props.annoTask.size) * 100)\n        return (\n            <div>\n                <Row>\n                <Col xs='3' md='3' xl='3'>\n                <div className='callout callout-danger'>\n                                <small className='text-muted'>Working on</small>\n                                <br/>\n                                <strong>{this.props.annoTask.name}</strong>\n                 </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                  <div className='callout callout-info'>\n                                <small className='text-muted'>Pipeline</small>\n                                <br/>\n                                <strong>{this.props.annoTask.pipelineName}</strong>\n                 </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                  <div className='callout callout-warning'>\n                                <small className='text-muted'>Annotations</small>\n                                <br/>\n                                <strong className='h4'>{this.props.annoTask.finished}/{this.props.annoTask.size}</strong>\n                 </div>\n                </Col>\n                <Col xs='3' md='3' xl='3'>\n                  <div className='callout callout-success'>\n                                <small className='text-muted'>Seconds/Annotation</small>\n                                <br/>\n                                <strong className='h4'>&#8709; {this.props.annoTask.statistic.secondsPerAnno}</strong>\n                 </div>\n                </Col>\n                </Row>\n                <div className='clearfix'>\n                    <div className='float-left'>\n                        <strong>{progress}%</strong>\n                    </div>\n                    <div className='float-right'>\n                        <small className='text-muted'>Started at: {this.props.annoTask.createdAt}</small>\n                    </div>\n                </div>\n                <Progress className='progress-xs' color={getColor(progress)} value={progress}/>\n                <br/>\n                <br/>\n                <Button onClick={()=>this.handleContinue(this.props.annoTask.type) }className='btn btn-info'>Continue</Button>\n            </div>\n        )\n    }\n}\n\nexport default WorkingOn","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Card, CardBody, CardHeader, Col, Row} from 'reactstrap'\n// import Facts from '../../../components/Dashboard/Annotator/Facts'\n// import ImagesPerDay from '../../../components/Dashboard/Annotator/ImagesPerDay'\nimport AmountPerLabel from '../components/AnnoTask/AmountPerLabel'\nimport MyAnnoTasks from '../components/AnnoTask/MyAnnoTasks'\nimport WorkingOn from '../components/AnnoTask/WorkingOn'\nimport actions from '../actions'\n\nconst {getAnnoTasks, getWorkingOnAnnoTask, chooseAnnoTask} = actions\n\nclass AnnotatorDashboard extends Component {\n    constructor(props){\n        super(props)\n\n        this.redirectMia = this.redirectMia.bind(this)\n        this.redirectSia = this.redirectSia.bind(this)\n    }\n    componentDidMount() {\n        this\n            .props\n            .getAnnoTasks()\n        this\n            .props\n            .getWorkingOnAnnoTask()\n        this.timer = setInterval(()=>  this.props.getAnnoTasks(), 1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.timer)\n        this.timer = null\n      }\n\n    chooseAnnoTask(id, type) {\n        if (type === \"MIA\") {\n            this\n                .props\n                .chooseAnnoTask(id, this.redirectMia)\n\n        } else if (type === \"SIA\") {\n\n            this\n                .props\n                .chooseAnnoTask(id, this.redirectSia)\n        }\n    }\n    redirectMia(){\n        this.props.history.push('/mia')\n    }\n    redirectSia(){\n        this.props.history.push('/sia')\n    }\n    renderWorkingOn() {\n        if (this.props.workingOnAnnoTask !== null) {\n            return (\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>\n                                Working on\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col xs='6' md='6' xl='6'>\n                                        <WorkingOn annoTask={this.props.workingOnAnnoTask}></WorkingOn>\n                                    </Col>\n                                    <Col xs='6' md='6' xl='6'>\n                                        <AmountPerLabel data={this.props.workingOnAnnoTask.statistic.amountPerLabel}></AmountPerLabel>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            )\n        }\n        return (\n            <React.Fragment></React.Fragment>\n        )\n    }\n    render() {\n        return (\n            <div className='animated fadeIn'>\n                {this.renderWorkingOn()}\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>\n                                My Annotation Tasks\n                            </CardHeader>\n                            <CardBody>\n                                <br/>\n                                <MyAnnoTasks\n                                    annoTasks={this.props.annoTasks}\n                                    callBack={(id, type) => this.chooseAnnoTask(id, type)}></MyAnnoTasks>\n                            </CardBody>\n                        </Card>\n                        {/* <Card>\n                            <CardHeader>\n                                Statistics\n                            </CardHeader>\n                            <CardBody>\n                                <Facts></Facts>\n                                <br/>\n                                <div>Images/Day</div>\n                                <br/>\n                                <ImagesPerDay></ImagesPerDay>\n                            </CardBody>\n                        </Card> */}\n                    </Col>\n                </Row>\n            </div>\n        )\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return ({workingOnAnnoTask: state.annoTask.workingOnAnnoTask, annoTasks: state.annoTask.annoTasks})\n}\nexport default connect(mapStateToProps, {getAnnoTasks, getWorkingOnAnnoTask, chooseAnnoTask})(AnnotatorDashboard)\n","export const getColor = (progress) => {\n    if (progress < 25) {\n        return 'danger'\n    }\n    if (progress < 50) {\n        return 'warning'\n    }\n    if (progress < 75) {\n        return 'info'\n    }\n    return 'success'\n}"],"sourceRoot":""}