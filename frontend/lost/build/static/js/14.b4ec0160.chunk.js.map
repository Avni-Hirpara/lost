{"version":3,"sources":["components/BasicComponents/Alert.js","components/Users/TableComponents.js","components/Users/BaseTable.js","components/Users/Groups.js","components/Users/UserModal.js","components/Users/Users.js","views/Users.js"],"names":["error","Swal","fire","position","type","title","showConfirmButton","timer","alertDelete","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","timesIcon","callback","react_default","a","createElement","Button","onClick","icon","Icon","size","name","color","checkIcon","GroupLabelsEditable","_ref2","row","dispatch","useDispatch","groups","useSelector","state","group","_useState","useState","map","el","selected","_useState2","Object","slicedToArray","colorGroups","setColorGroups","getGroups","actions","getGroupsAction","useEffect","fetchGroups","edit_groups","filter","el2","length","Fragment","Label","style","margin","cursor","e","colorGroup","currentTarget","innerHTML","GroupLabels","_ref3","textInput","key","value","Form","textInputInner","Input","width","disabled","fluid","onChange","BaseTable","props","tableKeysHeader","tableData","header","column","setColumn","allowedKeys","filteredData","data","myobj","forEach","objectSpread","defineProperty","_useState3","_useState4","setData","_useState5","_useState6","direction","setDirection","myCustomCell","cell","TableComponents","editButton","basic","deleteButton","asyncToGenerator","regenerator_default","mark","_callee","wrap","_callee$","_context","prev","next","Alert","sent","stop","this","Table","sortable","celled","Header","Row","HeaderCell","sorted","handleSort","clickedColumn","_","sortBy","reverse","Body","i","user_name","keys","Cell","textAlign","GroupTable","users","user","groupActions","deleteGroup","payload","deleteGroupAction","groupName","setGroupName","dataTableCallback","_ref","idx","_x","_x2","apply","arguments","action","createGroup","createGroupAction","group_name","iconPosition","placeholder","ERRORS","INIT_USERDATA","edit_user_name","edit_email","edit_isDesigner","edit_password","edit_confirm_password","UserModal","userData","setUserData","editUserData","undefined","email","isDesigner","Modal","minWidth","isOpen","modalIsOpen","toggle","ModalHeader","ModalBody","includes","ModalFooter","validated","roles","push","baseData","password","updateUser","updateUserAction","first_name","last_name","postData","createUser","createUserAction","UserTable","getUsers","getUsersAction","fetchUsers","isAnnotator","deletable","changeable","setModalIsOpen","editUserdata","setEditUserdata","deleteUser","deleteUserAction","Users","Grid","columns","divided","backgroundColor","padding","Column","Groups"],"mappings":"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","file":"static/js/14.b4ec0160.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\n\nexport const alertLoading =  () => {\n    Swal.fire({\n        title: 'Loading...',\n        onBeforeOpen: () => {\n            Swal.showLoading()\n        }\n    })\n}\n\nexport const alertClose = () =>{\n    Swal.close()\n}\n\nexport const alertSuccess = (title) => {\n    Swal.fire({\n        position: 'top-end',\n        type: 'success',\n        title: title,\n        showConfirmButton: false,\n        timer: 1500\n    })\n}\n\nexport const error = (error) => {\n    Swal.fire({\n        position: 'center',\n        type: 'error',\n        title: error,\n        showConfirmButton: false,\n        timer: 4000\n    })\n}\n\n export  const  alertDelete=  () => {\n    return Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      })\n}\n","import React, { useEffect, useState } from 'react'\nimport { Icon, Button, Input, Label, Form, Dropdown } from 'semantic-ui-react'\nimport * as Alert from '../BasicComponents/Alert'\nimport actions from 'actions/group'\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\n\nexport function timesIcon(callback) {\n    if(callback){\n        return (\n        <Button  onClick={() => {callback(\"edit_isDesigner\") }} icon>\n        <Icon size='big' name='times circle outline' color=\"red\"  />\n      </Button>\n      )\n    \n    }\n    return <Icon size='big' name='times circle outline' color=\"red\"  />\n}\n\nexport function checkIcon(callback) {\n    if(callback){\n        return (\n            <Button  onClick={() => {callback(\"edit_isDesigner\") }} icon>\n            <Icon size='big' name='check circle outline' color=\"green\" />\n          </Button>\n          )\n    }\n    return <Icon size='big' name='check circle outline' color=\"green\"  />\n}\n\nexport function editButton(onClick, row) {\n    return (\n        <Button basic color='blue' onClick={() => { onClick(\"edit\", row) }}>\n            Edit\n      </Button>\n    )\n}\n\nexport function deleteButton(onClick, row) {\n    return (\n        <Button basic color='red' onClick={async () => {\n            const reallyDelete = await Alert.alertDelete()\n            if (reallyDelete.value) {\n                onClick(\"delete\", row)\n            }\n        }\n\n        }>\n            Delete\n      </Button>\n    )\n}\n\nexport function GroupLabelsEditable({ row, callback }) {\n    const dispatch = useDispatch();\n    const groups = useSelector((state) => {\n        return state.group.groups\n    });\n    const [colorGroups, setColorGroups] = useState(\n        groups.map(el => ({ 'selected': false, 'name': el.name }))\n    )\n    const getGroups = () => dispatch(actions.getGroupsAction());\n    useEffect(() => {\n        function fetchGroups() {\n            getGroups();\n        }\n        fetchGroups();\n\n    }, [])\n\n    useEffect(() => {\n        setColorGroups(\n            groups.map(el => ({ 'selected': row.edit_groups.filter(el2 => el2.name === el.name).length ? true : false, 'name': el.name }))\n        )\n    }, [row])\n\n    \n    return (\n        <>\n            <div>\n                {colorGroups.map(el => (\n                    <Label style={{ margin: 3, cursor: 'pointer' }} color={el.selected ? 'green' : 'grey'} onClick={(e) => {\n                        callback(\"edit_groups\", colorGroups.filter(colorGroup=>{\n                            if (colorGroup.name === e.currentTarget.innerHTML) {\n                                return !colorGroup.selected \n                            }\n                            return colorGroup.selected\n                        }))\n                    }} >\n                        {el.name}\n                    </Label>\n                ))}\n            </div>\n\n        </>\n    )\n}\n\nexport function GroupLabels({ row }) {\n    return (\n        <>\n            {row.groups.map(group =>\n                <Label color='green' style={{ margin: 3 }}>\n                    {group.name}\n                </Label>\n            )}\n        </>\n    )\n}\n\n\nfunction textInputInner(key, value, callback) {\n\n\n\n    if (!value) value = {}\n    return (\n        <Form.Input\n            style={{ width: 130 }}\n            disabled={value.disabled}\n            value={value.value}\n            error={value.error}\n            type={(key === \"edit_password\" || key === \"edit_confirm_password\") ? \"password\" : \"text\"}\n            fluid\n            onChange={(e) => {\n                callback(\n                    key,\n                    e.currentTarget.value,\n                )\n            }\n            }\n        />\n    )\n}\nexport function textInput(key, value, callback) {\n    return (\n        <Form>\n            {textInputInner(key, value, callback)}\n        </Form>\n    )\n}\n\n{/* <Input error value={value} style={{ width: 130 }} placeholder='Search...' onChange={(e) => { callback(key, e.currentTarget.value) }} /> */ }\n","import _ from 'lodash'\nimport React, { useState, useEffect } from 'react'\nimport { Table, Icon, Button } from 'semantic-ui-react'\nimport * as TableComponents from './TableComponents'\n\n// ToDo: key in array.map()\n\n/**\n* tableData: {header: [{title: Age, key: age}, ...], data:[{age: 12,...}, ...]}\n* @param {{tableData : object, callback: function }} props \n*/\nexport default function BaseTable(props) {\n  const tableKeysHeader = props.tableData.header\n  const [column, setColumn] = useState(\"\");\n  const allowedKeys = props.tableData.header.map(el => el.key);\n  const filteredData = props.tableData.data.map(data => {\n    let myobj = {}\n    allowedKeys.forEach(key => {\n      myobj = { ...myobj, ...{ [key]: data[key] } }\n    })\n    return myobj\n  })\n  const [data, setData] = useState(filteredData);\n  const [direction, setDirection] = useState(\"\");\n\n  const handleSort = clickedColumn => {\n    if (column !== clickedColumn) {\n      setColumn(clickedColumn)\n      setData(_.sortBy(data, [clickedColumn]))\n      setDirection('ascending')\n      return\n    }\n    setData(data.reverse())\n    setDirection(direction === 'ascending' ? 'descending' : 'ascending')\n  }\n\n  useEffect(() => {\n    setData(filteredData)\n  }, [props.tableData.data]); // \n\n  const myCustomCell = (row, key) => {\n    const cell = row[key]\n    switch (key) {\n      case 'isDesigner':\n        // :TODO\n        if (cell) {\n          return TableComponents.checkIcon()\n        } else {\n          return TableComponents.timesIcon()\n        }\n\n      case 'isAnnotator':\n        if (cell) {\n          return TableComponents.checkIcon()\n        } else {\n          return TableComponents.timesIcon()\n        }\n      case 'edit':\n        return (TableComponents.editButton(props.callback, row))\n      case 'deleteUser':\n        return (TableComponents.deleteButton(props.callback, row))\n      case 'groups':\n        return <TableComponents.GroupLabels row={row}/>\n      case 'edit_user_name':\n      case 'edit_email':\n      case 'edit_password':\n      case 'edit_confirm_password':\n\n        return TableComponents.textInput(key, cell, props.callback)\n      case 'edit_isDesigner':\n      if (cell) {\n        return TableComponents.checkIcon(props.callback)\n      } else {\n        return TableComponents.timesIcon(props.callback)\n      }\n      case 'edit_groups':\n        return <TableComponents.GroupLabelsEditable row={row} callback={props.callback}/>\n      default:\n        return cell\n    }\n  }\n\n  return (\n    <Table sortable celled >\n      <Table.Header>\n        <Table.Row>\n          {tableKeysHeader.map(header => {\n            return (\n              <Table.HeaderCell\n                key={header.key}\n                sorted={column === header.key ? direction : null}\n                onClick={() => handleSort(header.key)}\n              >\n                {header.title}\n              </Table.HeaderCell>\n            )\n          })}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {data.map((row,i)  => {\n          return (\n            <Table.Row\n              key={row.user_name+  i}\n            >\n              {Object.keys(row).map((key,i) => {\n                return (<Table.Cell style={{textAlign:'center'}} key={i}>{myCustomCell(row,key)}</Table.Cell>)\n              })}\n            </Table.Row>\n          )\n        })}\n      </Table.Body>\n    </Table>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport groupActions from 'actions/group'\nimport userActions from 'actions/user'\nimport * as Alert from '../BasicComponents/Alert' \nimport { useDispatch, useSelector } from 'react-redux';\nimport BaseTable from './BaseTable'\n// * tableData: {header: [{title: Age, key: age}, ...], data:[{age: 12,...}, ...]}\nimport { Button, Input } from 'semantic-ui-react'\n\nfunction GroupTable() {\n    const groups = useSelector((state) => {\n\n        return state.group.groups\n    });\n\n    const users = useSelector((state) => state.user.users);\n\n    const dispatch = useDispatch();\n    const getGroups = () => dispatch(groupActions.getGroupsAction());\n    const createGroup = (payload)=> dispatch(groupActions.createGroupAction(payload));\n    const deleteGroup = (payload)=> dispatch(groupActions.deleteGroupAction(payload));\n\n    const data = groups.map(group => ({ 'groupName': group.name } ))\n    const [groupName, setGroupName] = useState(\"\")\n    const tableData = {\n        header: [\n            {\n                title: \"Group\",\n                key: \"groupName\"\n            },\n            {\n                title: \"\",\n                key: \"deleteUser\"\n            }\n        ],\n        data: data\n    }\n    useEffect(() => {\n         function fetchGroups() {\n             getGroups();\n        }\n        fetchGroups();\n\n    }, [])\n    const dataTableCallback =  async (type, row) => {\n        const group = groups.filter(el=>el.name == row.groupName)[0]\n        await deleteGroup(group.idx)\n        getGroups()\n\n    }\n\n    return (\n        <div>\n            <Input\n                value={groupName}\n                action={\n                    <Button basic color='blue'\n                        onClick={() => {\n                            if(users.filter(user=>user.user_name === groupName).length){\n                                Alert.error(\"groupname and username can not be the same\")\n                                return\n                            }\n                            if(groups.filter(group=>group.name===groupName).length){\n                                Alert.error(\"groupname already taken\")\n                                return\n                            }\n                            \n                                createGroup({'group_name': groupName})\n                                setGroupName(\"\")\n                                getGroups()\n                            \n\n                        }}>\n                        Add Group\n                    </Button>\n                }\n                onChange={(e)=>setGroupName(e.currentTarget.value)}\n                iconPosition='left'\n                placeholder='Groupname'\n            />\n{groups.length > 0 && <BaseTable tableData={tableData} callback={dataTableCallback} />}\n            \n        </div>\n    )\n}\n\nexport default GroupTable","import React, { useState, useEffect } from 'react'\nimport { ModalHeader, ModalBody, Modal, ModalFooter } from 'reactstrap';\nimport BaseTable from './BaseTable'\nimport { Button, RefFindNode } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from 'actions/user'\nimport * as Alert from '../BasicComponents/Alert' \n\nconst ERRORS = {\n    EDIT_USER_NAME: 'min 4 char',\n    EDIT_EMAIL: 'no valid email',\n    EDIT_PASSWORD: 'min 5 char',\n    EDIT_CONFIRM_PASSWORD: 'passwords do not match'\n}\nconst INIT_USERDATA =         {\n    edit_user_name: {\n        value: \"\",\n        error: ERRORS.EDIT_USER_NAME,\n        disabled: false\n    },\n    edit_email: {\n        value: \"\",\n        error: ERRORS.EDIT_EMAIL\n    },\n    edit_isDesigner: false,\n    edit_password: {\n        value: \"\",\n        error: ERRORS.EDIT_PASSWORD\n    },\n\n    edit_confirm_password: {\n        value: \"\",\n        error: ERRORS.EDIT_CONFIRM_PASSWORD\n    },\n    edit_groups: []\n\n}\n\nexport default (props) => {\n    const groups = useSelector((state) => {\n\n        return state.group.groups\n    });\n    const users = useSelector((state) => state.user.users);\n\n\n    const [userData, setUserData] = useState(\n        INIT_USERDATA\n    );\n    const dispatch = useDispatch();\n    const createUser = (payload) => dispatch(actions.createUserAction(payload));\n    const updateUser = (payload) => dispatch(actions.updateUserAction(payload));\n\n    let data\n    if (userData) {\n        data = [\n            {\n                edit_user_name: userData.edit_user_name,\n                edit_email: userData.edit_email,\n                edit_isDesigner: userData.edit_isDesigner,\n                edit_password: userData.edit_password,\n                edit_confirm_password: userData.edit_confirm_password,\n                edit_groups: userData.edit_groups\n            }\n        ]\n\n    }\n    const tableData = {\n        header: [\n            {\n                title: 'Username',\n                key: 'edit_user_name'\n            },\n            {\n                title: 'Email',\n                key: 'edit_email'\n            },\n            {\n                title: 'Designer',\n                key: 'edit_isDesigner'\n            },\n            {\n                title: 'Password',\n                key: 'edit_password'\n            },\n            {\n                title: 'Confirm Password',\n                key: 'edit_confirm_password'\n            },\n            {\n                title: 'Groups',\n                key: 'edit_groups'\n            },\n        ],\n        data: data\n    }\n\n    useEffect(() => {\n\n        if (props.editUserData) {\n            setUserData(\n                {\n                    idx: props.editUserData.idx,\n                    edit_user_name: {\n                        value: props.editUserData.user_name,\n                        error: undefined,\n                        disabled: true\n                    },\n                    edit_email: {\n                        value: props.editUserData.email,\n                        error: undefined\n                    },\n                    edit_isDesigner: props.editUserData.isDesigner,\n                    edit_password: {\n                        value: \"\",\n                        error: undefined\n                    },\n\n                    edit_confirm_password: {\n                        value: \"\",\n                        error: undefined\n                    },\n                    edit_groups: props.editUserData.groups\n                }\n            )\n        }else{\n            setUserData(INIT_USERDATA)\n        }\n\n    }, [props.editUserData]); // empty-array means don't watch for any updates\n\n    //{\"idx\":4,\"email\":\"hehes\",\"first_name\":\"\",\"last_name\":\"\",\"groups\":[],\"roles\":[\"Annotator\"],\"password\":null}\n\n    const dataTableCallback = (key, value) => {\n\n        switch (key) {\n            case 'edit_user_name':\n                setUserData({\n                    ...userData,\n                    edit_user_name: {\n                        value,\n                        error: value.length > 3 ? undefined : ERRORS.EDIT_USER_NAME\n                    }\n                })\n                break\n            case 'edit_email':\n                setUserData({\n                    ...userData,\n                    edit_email: {\n                        value,\n                        error: value.includes('@') ? undefined : ERRORS.EDIT_EMAIL\n                    }\n                })\n                break\n            case 'edit_isDesigner':\n                setUserData({ ...userData, edit_isDesigner: !userData.edit_isDesigner })\n                break\n            case 'edit_password':\n                setUserData({\n                    ...userData,\n                    edit_password: {\n                        value,\n                        error: value.length > 4 ? undefined : ERRORS.EDIT_PASSWORD\n                    },\n                    edit_confirm_password: {\n                        ...userData.edit_confirm_password,\n                        error: userData['edit_confirm_password'].value === value ? undefined : ERRORS.EDIT_CONFIRM_PASSWORD\n                    }\n                })\n                break\n            case 'edit_confirm_password':\n                setUserData({\n                    ...userData,\n                    edit_password: {\n                        ...userData.edit_password,\n                        error: userData['edit_password'].value.length > 4 ? undefined : ERRORS.EDIT_PASSWORD\n                    },\n                    edit_confirm_password: {\n                        value,\n                        error: userData['edit_password'].value === value ? undefined : ERRORS.EDIT_CONFIRM_PASSWORD\n                    }\n                })\n                break\n            case 'edit_groups':\n                setUserData({\n                    ...userData,\n                    edit_groups: value\n                })    \n            break\n        }\n    }\n\n    return (\n        <>\n            <Modal style={{minWidth: 900}} isOpen={props.modalIsOpen} toggle={props.toggle}>\n                <ModalHeader >{props.editUserData ? \"Edit User\" : \"Add User\"}</ModalHeader>\n                <ModalBody >\n                    <BaseTable\n                        tableData={tableData}\n                        callback={dataTableCallback}\n                    />\n                </ModalBody>\n                <ModalFooter>\n                    <Button basic color='red' onClick={() => { props.toggle() }} >\n                        Abort\n      </Button>\n                    <Button basic color='green' onClick={() => {\n                        let validated = true\n                        Object.keys(userData).forEach(key => {\n                            const value = userData[key]\n                            if (value.error) {\n                                validated = false;\n                            }\n                        })\n                        if (validated) {\n                            const roles = ['Annotater']\n                            if (userData.edit_isDesigner) {\n                                roles.push('Designer')\n                            }\n\n                            const baseData = {\n                                email: userData.edit_email.value,\n                                password: userData.edit_password.value,\n                                roles,\n                                groups: userData.edit_groups.map(el=>el.name)\n                            }\n                            if(userData.idx){\n                                const patchData= {\n                                    ...baseData,\n                                    idx: userData.idx,\n                                    first_name: \"\",\n                                    last_name: \"\"\n                                }\n                                updateUser(patchData)\n                            }else{\n                                const postData = {\n                                    ...baseData,\n                                    user_name: userData.edit_user_name.value,\n                                }\n                                if(groups.filter(group=>group.name === postData.user_name).length){\n                                    Alert.error(\"username and groupname can not be the same\")\n                                    return\n                                }\n                                if(users.filter(user=>(user.user_name===postData.user_name) || (user.email === postData.email)).length){\n                                    Alert.error(\"username/email already taken\")\n                                    return\n                                }\n                               createUser(postData)\n    \n                            }\n                            setUserData(INIT_USERDATA)\n                            props.toggle()\n                        }\n                    }} >\n                        Save\n      </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\n//{\"idx\":4,\"email\":\"hehes\",\"first_name\":\"\",\"last_name\":\"\",\"groups\":[],\"roles\":[\"Annotator\"],\"password\":null}\n\n\n\n// {\"user_name\":\"cccc\",\"password\":\"djangotestd\",\"email\":\"cccc\",\"groups\":[],\"roles\":[\"Designer\",\"Annotater\"]}\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport BaseTable from './BaseTable'\nimport actions from 'actions/user'\nimport { Button } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserModal from './UserModal'\n\n\nfunction UserTable() {\n    let users = useSelector((state) => state.user.users);\n    const dispatch = useDispatch();\n    const getUsers = () => dispatch(actions.getUsersAction());\n    const deleteUser = (payload) => dispatch(actions.deleteUserAction(payload));\n\n    useEffect(() => {\n         function fetchUsers() {\n             getUsers();\n        }\n        fetchUsers();\n    }, [])\n    users = users.map(user => {\n        const isDesigner = user.roles.filter(el => el.name === 'Designer')[0] != undefined\n        const isAnnotator = user.roles.filter(el => el.name === 'Annotator')[0] != undefined\n        return (\n            {\n                key: user.user_name,\n                ...user,\n                isDesigner,\n                isAnnotator,\n                deletable: true,\n                changeable: true\n            }\n        )\n    })\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [editUserdata, setEditUserdata] = useState();\n\n\n    const tableData = {\n        header: [\n            {\n                title: 'Username',\n                key: 'user_name'\n            },\n            {\n                title: 'Email',\n                key: 'email'\n            },\n            {\n                title: 'Designer',\n                key: 'isDesigner'\n            },\n\n            {\n                title: 'Groups',\n                key: 'groups'\n            },\n            {\n                title: '',\n                key: 'edit'\n            },\n            {\n                title: '',\n                key: 'deleteUser'\n            },\n\n        ],\n        data: users\n    }\n\n    const dataTableCallback = (type, row) => {\n        const user = users.filter(user => user.user_name === row.user_name)[0]\n        if(type === \"edit\"){\n            setModalIsOpen(true);\n            setEditUserdata(user)\n        }else if (type === \"delete\"){\n            deleteUser(user.idx)\n        }\n\n    }\n    return (\n        <div>\n\n            <UserModal  editUserData={editUserdata} modalIsOpen={modalIsOpen}\n                toggle={() => {\n                    if (modalIsOpen) {\n                        setEditUserdata()\n                    }\n                    setModalIsOpen(!modalIsOpen)\n                }\n                } />\n            <Button basic color='blue'\n                onClick={() => {\n                    setModalIsOpen(true)\n                }}>\n                Add User\n    </Button>\n            <BaseTable tableData={tableData} callback={dataTableCallback}   />\n\n        </div>\n    )\n}\n\nexport default UserTable\n","import React from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nimport GroupTable from '../components/Users/Groups'\nimport UserTable from '../components/Users/Users'\n\n\n\nfunction Users() {\n    return (\n        <Grid columns={2} divided style={{backgroundColor: 'white', padding: 15}}>\n            <Grid.Row>\n                <Grid.Column width={5}>\n                    <GroupTable />\n                </Grid.Column>\n                <Grid.Column width={11}>\n                    <UserTable />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}\n\n\nexport default Users\n\n"],"sourceRoot":""}